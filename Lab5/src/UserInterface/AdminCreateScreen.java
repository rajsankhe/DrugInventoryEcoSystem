/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Abstract.User;
import Business.Users.Admin;
import Business.Users.Customer;
import Business.Users.Supplier;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author harshalneelkamal
 */
public class AdminCreateScreen extends javax.swing.JPanel {

    /**
     * Creates new form AdminScreen
     */
    private JPanel panelRight;
    private Admin admin;

    public AdminCreateScreen(JPanel panelRight, Admin admin) {
        initComponents();

        jLabelPwdAlert.setVisible(false);
        jLabelUserNameAlert.setVisible(false);
        jLabelRePwdAlert.setVisible(false);
        this.panelRight = panelRight;
        this.admin = admin;
        ButtonGroup group = new ButtonGroup();
        group.add(radioCustomer);
        group.add(radioSupplier);
    }

    //Checking whether user name already exists or no.
    public boolean checkIfUserNameAlreadyExists(String username) {
        //Iterate through the customer and supplier directory in admin

        //Checking in Customer directory
        for (User user : admin.getCustDir().getCustomerList()) {
            if (username.equalsIgnoreCase(user.getUserName())) {
                return true;
            }
        }

        //Checking in Supplier directory
        for (User user : admin.getSuppDir().getSupplierList()) {
            if (username.equalsIgnoreCase(user.getUserName())) {
                return true;
            }
        }

        //Username is unique.
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreate = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        txtPword = new javax.swing.JTextField();
        txtRePword = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        radioCustomer = new javax.swing.JRadioButton();
        radioSupplier = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPwdFormatAlert = new javax.swing.JTextArea();
        jLabelRePwdAlert = new javax.swing.JLabel();
        jLabelUserNameAlert = new javax.swing.JLabel();
        jLabelPwdAlert = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 319, 173, -1));

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserKeyReleased(evt);
            }
        });
        add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 85, 173, -1));

        txtPword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPwordKeyReleased(evt);
            }
        });
        add(txtPword, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 140, 173, -1));

        txtRePword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRePwordKeyReleased(evt);
            }
        });
        add(txtRePword, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 198, 173, -1));

        jLabel1.setText("username:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 95, -1, -1));

        jLabel2.setText("password:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 145, -1, -1));

        jLabel3.setText("re-enter password :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 203, -1, -1));

        radioCustomer.setText("Customer");
        radioCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCustomerActionPerformed(evt);
            }
        });
        add(radioCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 261, -1, -1));

        radioSupplier.setText("Supplier");
        add(radioSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 290, -1, -1));

        btnBack.setText("< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 6, -1, -1));

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N

        jTextAreaPwdFormatAlert.setEditable(false);
        jTextAreaPwdFormatAlert.setColumns(20);
        jTextAreaPwdFormatAlert.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jTextAreaPwdFormatAlert.setRows(5);
        jTextAreaPwdFormatAlert.setText("Usename Policy:\n1. Should be email address not starting with \nunderscore\n2. Should not contain any other special \ncharacter except underscore\n\nPassword Policy:  \n1. Should contain alphanumeric characters\n2. \"+_$\" are only allowed special characters");
        jTextAreaPwdFormatAlert.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaPwdFormatAlert);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 91, 291, 152));

        jLabelRePwdAlert.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jLabelRePwdAlert.setText("*Password should match with entered password");
        add(jLabelRePwdAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 230, -1, -1));

        jLabelUserNameAlert.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jLabelUserNameAlert.setText("*Username should match Username policy");
        add(jLabelUserNameAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 123, 241, -1));

        jLabelPwdAlert.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        jLabelPwdAlert.setText("*Password should match password policy");
        add(jLabelPwdAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 172, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String alertString = "";

        if (txtUser.getText().isEmpty()) {
            alertString += "Enter username\n";
        }

        if (!txtUser.getText().isEmpty() && checkIfUserNameAlreadyExists(txtUser.getText())) {
            alertString += "Username already exists. Please select different username\n";
        }

        if (txtPword.getText().isEmpty()) {
            alertString += "Enter password\n";
        }
        if (txtRePword.getText().isEmpty()) {
            alertString += "Re enter password\n";
        }
        if (!(radioCustomer.isSelected() || radioSupplier.isSelected())) {
            alertString += "Select the user role\n";
        }
        if (!alertString.isEmpty()) {

            JOptionPane.showMessageDialog(null, alertString);
            return;
        }

        if (radioCustomer.isSelected()) {

            Customer cust = new Customer(txtRePword.getText(), txtUser.getText());
            admin.getCustDir().getCustomerList().add(cust);
            JOptionPane.showMessageDialog(null, "Successfully created Customer with username  : " + cust.getUserName());

        }
        if (radioSupplier.isSelected()) {
            Supplier sup = new Supplier(txtRePword.getText(), txtUser.getText());
            admin.getSuppDir().getSupplierList().add(sup);
            JOptionPane.showMessageDialog(null, "Successfully created Supplier with username : " + sup.getUserName());
        }

        //Supplier or Customer has been successfully created. We will show a pop-up to user with the same message
    }//GEN-LAST:event_btnCreateActionPerformed

    private void radioCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioCustomerActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        CardLayout layout = (CardLayout) panelRight.getLayout();
        panelRight.remove(this);
        layout.previous(panelRight);
        for (Component component : panelRight.getComponents()) {
            if ((AdminMainScreen.class).equals(component.getClass())) {
                AdminMainScreen manage = (AdminMainScreen) component;
                manage.populate();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtRePwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRePwordKeyReleased
        // TODO add your handling code here:
        String password = txtPword.getText();
        String rePassword = txtRePword.getText();
        System.out.println(rePassword + "  " + password.substring(0, rePassword.length() - 1));
        if (rePassword.length() <= password.length()) {
            if (!rePassword.equals(password.substring(0, rePassword.length()))) {
                jLabelRePwdAlert.setVisible(true);
            } else {
                jLabelRePwdAlert.setVisible(false);
            }
        } else {
            jLabelRePwdAlert.setVisible(true);
        }
    }//GEN-LAST:event_txtRePwordKeyReleased

    private void txtUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyReleased
        // TODO add your handling code here:
        Pattern pattern = Pattern.compile("^[^_][a-z0-9_]+@[a-z0-9_]+\\.[a-z0-9_\\.]*$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(txtUser.getText());
        if (matcher.find()) {
            jLabelUserNameAlert.setVisible(false);
        } else {
            jLabelUserNameAlert.setVisible(true);
        }

    }//GEN-LAST:event_txtUserKeyReleased

    private void txtPwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPwordKeyReleased
        // TODO add your handling code here:
        Pattern pattern = Pattern.compile("^[a-z0-9_+\\$]*$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(txtPword.getText());
        if (matcher.find()) {
            jLabelPwdAlert.setVisible(false);
        } else {
            jLabelPwdAlert.setVisible(true);
        }

    }//GEN-LAST:event_txtPwordKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelPwdAlert;
    private javax.swing.JLabel jLabelRePwdAlert;
    private javax.swing.JLabel jLabelUserNameAlert;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaPwdFormatAlert;
    private javax.swing.JRadioButton radioCustomer;
    private javax.swing.JRadioButton radioSupplier;
    private javax.swing.JTextField txtPword;
    private javax.swing.JTextField txtRePword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
