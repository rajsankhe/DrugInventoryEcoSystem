/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.administrativerole;

import business.enterprise.Enterprise;
import business.enterprise.Enterprise.EnterpriseType;
import business.organization.Organization;
import business.organization.Organization.OrganizationType;
import business.organization.OrganizationDirectory;
import commonutils.Validator;
import java.awt.CardLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author vivekdalal
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    private EnterpriseType enterpriseType;

    private static final Logger log = LogManager.getLogger(ManageOrganizationJPanel.class);

    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, OrganizationDirectory directory, Enterprise.EnterpriseType enterpriseType) {
        initComponents();
        this.setSize(1200, 750);
        ((DefaultTableCellRenderer) organizationJTable.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        organizationJTable.setShowGrid(true);
        organizationJTable.setSize(300, 64);
        this.userProcessContainer = userProcessContainer;
        this.directory = directory;
        this.enterpriseType = enterpriseType;

        populateTable();
        populateCombo();
        log.info("ManageOrganizationJPanel loaded successfully");
    }

    private void populateCombo() {
        organizationJComboBox.removeAllItems();

        if (enterpriseType == Enterprise.EnterpriseType.Chemist) {
            organizationJComboBox.addItem(OrganizationType.Worker);
            organizationJComboBox.addItem(OrganizationType.Manager);
        } else if (enterpriseType == Enterprise.EnterpriseType.Legal) {
            organizationJComboBox.addItem(OrganizationType.Validator);
        } else if (enterpriseType == Enterprise.EnterpriseType.Manufacturer) {
            organizationJComboBox.addItem(OrganizationType.Producer);
        } else if (enterpriseType == Enterprise.EnterpriseType.Supplier) {
            organizationJComboBox.addItem(OrganizationType.Approver);
        }
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : directory.getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization;

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        orgNameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        editOrgjButton = new javax.swing.JButton();
        deleteOrgjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(1200, 750));
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setPreferredSize(new java.awt.Dimension(1200, 750));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(102, 255, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 255, 204));
        kGradientPanel1.setMaximumSize(new java.awt.Dimension(1200, 750));
        kGradientPanel1.setMinimumSize(new java.awt.Dimension(1200, 750));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(1200, 750));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJTable.setBackground(new java.awt.Color(102, 255, 204));
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        organizationJTable.setGridColor(new java.awt.Color(0, 0, 0));
        organizationJTable.setSelectionBackground(new java.awt.Color(102, 255, 204));
        organizationJTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(organizationJTable);

        kGradientPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 690, 160));

        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, -1, 50));

        kGradientPanel1.add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 390, 200, -1));

        jLabel1.setText("Organization Type ");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 390, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel2.setText("Organization Name ");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, -1, -1));
        kGradientPanel1.add(orgNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 420, 200, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Organization");
        kGradientPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 660, 110));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/admin-internal.png"))); // NOI18N
        kGradientPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, 100));

        editOrgjButton.setText("Edit");
        editOrgjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrgjButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(editOrgjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, -1, -1));

        deleteOrgjButton.setText("Delete");
        deleteOrgjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrgjButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(deleteOrgjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, -1, -1));

        add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 750));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        OrganizationType type = (OrganizationType) organizationJComboBox.getSelectedItem();
        String orgName = orgNameJTextField.getText();
        if (!Validator.isValidAlphaNumericWithSpaces(orgName)) {
            JOptionPane.showMessageDialog(null, "Organization name is invalid. Only alphanumeric characters are allowed. Please check");
            log.info("Organization name is invalid. Only alphanumeric characters are allowed. Please check");
            return;
        }

        //check if organization with same name exists in the system
        for (Organization organization : directory.getOrganizationList()) {
            if (organization.getName().equalsIgnoreCase(orgName)) {
                JOptionPane.showMessageDialog(null, "Organization with the same name exists in this enterprise. Please check");
                log.info("Organization with the same name exists in this enterprise. Please check");
                return;
            }
        }

        directory.createOrganization(orgName, type);
        JOptionPane.showMessageDialog(null, "Organization created successfully");
        log.info("Organization created successfully");
        orgNameJTextField.setText("");
        populateTable();
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void editOrgjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrgjButtonActionPerformed
        int selectedRow = organizationJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!!");
            log.info("Please select a row!!!");
        } else {
            Organization organization = (Organization) organizationJTable.getValueAt(selectedRow, 1);

            JFrame frame = new JFrame();
            String message = (String) JOptionPane.showInputDialog(frame,
                    "Update Organization",
                    "New Name",
                    JOptionPane.OK_CANCEL_OPTION);
            if (!Validator.isValidAlphaNumericWithSpaces(message)) {
                JOptionPane.showMessageDialog(null, "Organization update failed. Only alphanumeric characters, spaces and . allowed.");
                log.info("Organization update failed. Only alphanumeric characters, spaces and . allowed.");
                return;
            }

            organization.setName(message);
            populateTable();
        }
    }//GEN-LAST:event_editOrgjButtonActionPerformed

    private void deleteOrgjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrgjButtonActionPerformed
        int selectedRow = organizationJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!!");
        } else {
            Organization organization = (Organization) organizationJTable.getValueAt(selectedRow, 1);
            if (organization.getUserAccountDirectory().getUserAccountList().size() > 0) {
                JOptionPane.showMessageDialog(null, "Organization has user account which are active");
                log.info("Organization has user account which are active");
                return;
            }

            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                //can delete the network now.
                directory.removeOrganization(organization);
            }

            populateTable();
        }

    }//GEN-LAST:event_deleteOrgjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteOrgjButton;
    private javax.swing.JButton editOrgjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField orgNameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
