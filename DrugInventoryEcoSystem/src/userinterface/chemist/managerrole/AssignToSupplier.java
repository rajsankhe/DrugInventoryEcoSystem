/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.chemist.managerrole;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.supplier.ApproverOrganization;
import business.useraccount.UserAccount;
import business.workqueue.WorkRequestDrugs;
import commonutils.Constants;
import java.awt.CardLayout;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Raj Sankhe
 */
public class AssignToSupplier extends javax.swing.JPanel {

    /**
     * Creates new form AssignToSupplier
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private WorkRequestDrugs request;
    public AssignToSupplier(JPanel userProcessContainer,EcoSystem ecoSystem,WorkRequestDrugs request ) {
        initComponents();
        networkDropdown.removeAllItems();
        enterpriseDropdown.removeAllItems();
        supplierDropdown.removeAllItems();
        this.userProcessContainer= userProcessContainer;
        this.ecosystem= ecosystem;
        this.request= request;
        List<Network> networkList=  ecoSystem.getNetworkDirectory().getNetworkList();
        networkList.stream().forEach(network -> networkDropdown.addItem(network.getName()));
        String networkName = networkDropdown.getSelectedItem().toString();
        //Find objet of selected network name
        Network networkSelected= networkList.stream()
                .filter(network -> networkName.equals(network.getName()))
                .findAny()
                .orElse(null);
        List<Enterprise> enterpriseList=networkSelected.getEnterpriseDirectory().getEnterpriseList();
        enterpriseList.stream().forEach(enterprise -> enterpriseDropdown.addItem(enterprise.getName()));
        String enterpriseName = enterpriseDropdown.getSelectedItem().toString();
        Enterprise enterpriseSelected=enterpriseList.stream()
                .filter(enterprise -> enterpriseName.equals(enterprise.getName()))
                .findAny()
                .orElse(null);
       // String suppplierTYpe=Organization.OrganizationType.Approver.getValue();
      // Organization o= enterpriseSelected.getOrganizationDirectory().getOrganizationList().stream()
                //.filter(x -> x instanceof ApproverOrganization).findFirst().get();
        /*Organization organizationSelected=(Organization) enterpriseSelected.getOrganizationDirectory().getOrganizationList().stream()
                .filter(organization -> suppplierTYpe.toString().equals(organization.getOrganizationType()));
              //  .findFirst();
        */
        Organization org= null;
        for (Organization organization : enterpriseSelected.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ApproverOrganization){
                org = organization;
                break;
            }
        }
        /*if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            
        }
        organization.getWorkQueue().getWorkRequestList().remove(request);
        populateRequestTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "Assign request to you.");
        }*/
        if(org!= null)
        {
            Set<String> suppliers= org.getUserAccountDirectory().getUserAccountList().keySet();
            suppliers.forEach(supplier -> supplierDropdown.addItem(supplier));
            String supplierName = supplierDropdown.getSelectedItem().toString();
            UserAccount supplierAccount= org.getUserAccountDirectory().getUserAccountList().get(supplierName);
            supplierAccount.getWorkQueue().getWorkRequestList().add(request);
            request.setStatus(Constants.sentToSupplier);
            JOptionPane.showMessageDialog(null, "Request send to supplier");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Request cannot be fulfilled");
        }
        
        
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        networkDropdown = new javax.swing.JComboBox<>();
        enterpriseDropdown = new javax.swing.JComboBox<>();
        supplierDropdown = new javax.swing.JComboBox<>();
        back = new javax.swing.JButton();

        kGradientPanel1.setkEndColor(new java.awt.Color(102, 204, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(183, 248, 230));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("     Choose Supplier");
        jLabel1.setAlignmentX(740.0F);
        jLabel1.setAlignmentY(245.0F);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setText("Enterprise:");
        jLabel2.setAlignmentX(740.0F);
        jLabel2.setAlignmentY(245.0F);

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setText("Network:");
        jLabel3.setAlignmentX(740.0F);
        jLabel3.setAlignmentY(245.0F);

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("Supplier:");
        jLabel4.setAlignmentX(740.0F);
        jLabel4.setAlignmentY(245.0F);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Submit");

        networkDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        enterpriseDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        supplierDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1)
                            .addComponent(networkDropdown, 0, 161, Short.MAX_VALUE)
                            .addComponent(enterpriseDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(enterpriseDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(supplierDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> enterpriseDropdown;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JComboBox<String> networkDropdown;
    private javax.swing.JComboBox<String> supplierDropdown;
    // End of variables declaration//GEN-END:variables
}
